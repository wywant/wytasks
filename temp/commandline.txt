before

!!streamFactory.file
outputKey=customStreamFactory
dir=/home/cc/copy/cmdAndExample

!!streamFactory.file
outputKey=templateStreamFactory
dir=/home/cc/copy/scripts/linuxman/templates

!!streamFactory.file
dir=/home/cc/copy/scripts/linuxman/index
outputKey=indexStreamFactory

!!string.format
outputKey=commandJsonFile
format=/home/cc/copy/cmdAndExample/%s.json
arguments=commandName

!!string.format
outputKey=customJsonFilename
format=%s.json
arguments=commandName
-------------------
get
name
!!bool
outputKey=cacheFileExists
booleanExpression=fileExists:/usr/javaapps/scripts/linuxman/templates/generatorHome.cache


!!reader.file:true:${cacheFileExists}
filename=generatorHome.cache
outputKey=htmlContent
streamFactory=${templateStreamFactory}

!!reader.file:false:${cacheFileExists}
filename=generatorHome.vm
outputKey=templateContent
streamFactory=${templateStreamFactory}

!!categoryBean:false:${cacheFileExists}

!!setParameters:false:${cacheFileExists}
pageTitle=Linux command generators

!!log
keys=pageTitle

!!template.velocity:false:${cacheFileExists}
outputKey=htmlContent
inputKey=${templateContent}

!!writer:false:${cacheFileExists}
streamFactory=${templateStreamFactory}
filename=generatorHome.cache
inputKey=${htmlContent}

!!servlet.writer
inputKey=${htmlContent}
-------------------
get
name,action=manHome
!!bool
outputKey=cacheFileExists
booleanExpression=fileExists:/usr/javaapps/scripts/linuxman/templates/manHome.cache


!!reader.file:true:${cacheFileExists}
filename=manHome.cache
outputKey=htmlContent
streamFactory=${templateStreamFactory}

!!reader.file:false:${cacheFileExists}
filename=manHome.vm
outputKey=templateContent
streamFactory=${templateStreamFactory}

!!categoryBean:false:${cacheFileExists}

!!setParameters:false:${cacheFileExists}
pageTitle=Linux mans

!!template.velocity:false:${cacheFileExists}
outputKey=htmlContent
inputKey=${templateContent}

!!writer:false:${cacheFileExists}
streamFactory=${templateStreamFactory}
filename=manHome.cache
inputKey=${htmlContent}

!!servlet.writer
inputKey=${htmlContent}
-------------------
get
name,commandName


!!reader.kv.string1To1
outputKey=nameDescBytes
indexName=linuxManNameDesc
keyName=${commandName}
streamFactory=${indexStreamFactory}

!!bytes.toString
outputKey=nameDesc
inputKey=nameDescBytes


!!reader.file
filename=outputHTML.vm
outputKey=templateContent
streamFactory=${templateStreamFactory}

!!string.format
outputKey=pageTitle
format=Linux %s's generator
arguments=commandName

!!categoryBean

!!template.velocity
outputKey=htmlContent
inputKey=${templateContent}

!!servlet.writer
inputKey=${htmlContent}


-------------------
get
name,commandName,action=input

!!permission.backdoor
outputKey=backdoorIsOpen


!!reader.file:true:${backdoorIsOpen}
filename=inputHTML.vm
outputKey=templateContent
streamFactory=${templateStreamFactory}

!!template.velocity:true:${backdoorIsOpen}
outputKey=htmlContent
inputKey=${templateContent}

!!servlet.writer:true:${backdoorIsOpen}
inputKey=${htmlContent}

!!servlet.error:false:${backdoorIsOpen}
errorCode=403
errorMessage=Forbidden


-------------------
get
name,commandName,action=getJson


!!bool
outputKey=customFileExists
booleanExpression=fileExists:${commandJsonFile}



!!reader.file:true:${customFileExists}
filename=${customJsonFilename}
outputKey=jsonContent
streamFactory=${customStreamFactory}


!!reader.kv.string1To1:false:${customFileExists}
outputKey=jsonBytes
indexName=linuxManJson
keyName=${commandName}
streamFactory=${indexStreamFactory}

!!bytes.toString:false:${customFileExists}
outputKey=jsonContent
inputKey=jsonBytes

!!log
keys=customFileExists,commandJsonFile,jsonContent,jsonBytes

!!servlet.contentType
inputKey=text/javascript; charset=UTF-8

!!servlet.writer
inputKey=${jsonContent}


------------------
post
name,commandName,action=saveJson

!!permission.backdoor
outputKey=backdoorIsOpen

!!servlet.inputStream2Bytes:true:${backdoorIsOpen}
outputKey=jsonBytes

!!outputStream:true:${backdoorIsOpen}
inputKey=${jsonBytes}
filename=${commandName}
streamFactory=${customStreamFactory}

!!servlet.contentType:true:${backdoorIsOpen}
inputKey=text/javascript; charset=UTF-8

!!servlet.writer:true:${backdoorIsOpen}
inputKey={"message":"Success"}

!!servlet.error:false:${backdoorIsOpen}
errorCode=403
errorMessage=Forbidden

--------------------------------
get
name,commandName,action=man

!!categoryBean

!!reader.kv.string1To1
outputKey=manBytes
indexName=linuxMan
keyName=${commandName}
streamFactory=${indexStreamFactory}

!!bytes.toString
outputKey=manContent
inputKey=manBytes


!!reader.file
filename=manHTML.vm
outputKey=templateContent
streamFactory=${templateStreamFactory}

!!string.format
outputKey=pageTitle
format=Linux %s man
arguments=commandName

!!template.velocity
outputKey=htmlContent
inputKey=${templateContent}

!!servlet.writer
inputKey=${htmlContent}

-------------------
get
name,commandName,action=examples

!!reader.file
filename=outputExamples.vm
outputKey=templateContent
streamFactory=${templateStreamFactory}


!!categoryBean

!!template.velocity
outputKey=htmlContent
inputKey=${templateContent}

!!servlet.writer
inputKey=${htmlContent}
